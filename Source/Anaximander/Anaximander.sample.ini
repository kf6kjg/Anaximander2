[Startup]
	; Whether or not to launch the notification server and keep running.
	;ServerMode = false

	; Maximum degree of parallelism.  Consider this to be the number of CPUs to execute on.  Default is -1, which means as many threads as the OS will let it use.
	; Can also be specified at the command-line as -p=X
	;MaxParallelism = -1


[Database]
	; The connection string required to connect to your grid's primary database.
	MasterDatabaseConnectionString = "Data Source=hostos;Database=halcyon;User ID=root;Password=x;Pooling=True;Min Pool Size=0;"

	; Common connection info for the Region Databases.  The 'Data Source' stanza will be provided automatically.
	RDBConnectionStringPartial = "Database=halcyon;User ID=root;Password=x;Pooling=True;Min Pool Size=0;"


[Server]
	; Options in this section require Startup::ServerMode to be true.

	; Enable SSL for the region-to-Anaximander connections?
	;UseSSL = false

	; What IP address or domain should Anaximander bind to?
	;Domain = "localhost"

	; What port should Anaximander listen on?
	;Port = 6473

	; Comma-delimited API keys. Use these keys when accessing Anaximander from various clients.  Keep them secret, keep them safe.
	; Keys can be any amount of any characters you like excepting the comma.  Also note that trailing or leading white space will be trimmed.
	; Example: "This is a key,6236iouh2356joi, that was a key and this is a third." results in 3 keys: "This is a key", "6236iouh2356joi", and "that was a key and this is a third."
	; If you do not provide any keys or the field is white space, then all calls are allowed.
	;APIKeys = ""


[Folders]
	; The folder, either as an absolute or relative-to-working-folder path, where the files should be saved.
	;MapTilePath = "./maptiles"


[MapTileInfo]
	; Specifies the technique used to render a map image.  Default is "OBBRenderer".
	; Available options are "OBBRenderer" and "XFRenderer"
	;RenderTechnique = "OBBRenderer"

	; The number of pixels per side for the rendered map images.  Default is 256.
	;PixelScale = 256

	; The image format to use for saved map images.  Default is JPEG.
	;ImageFormat = "JPEG"

	; The format for the names of the image files.  Default is "map-{Z}-{X}-{Y}-objects" and is what is expected by all current viewers.
	;TileNameFormat = "map-{Z}-{X}-{Y}-objects"

	; The base of the ocean image file name. This file is used if the requested map image cannot be found.  Default is "ocean".
	;OceanTileName = "ocean"

	; The color of the ocean, default is 0, 0, 255.
	;OceanColorRed = 0
	;OceanColorGreen = 0
	;OceanColorBlue = 255

	; Image used to overlay the water in void space. Default is nothing.
	;OceanOverlay = "/path/to/image"

	; Image used to overlay the water in regions. Default is nothing.
	;WaterOverlay = "/path/to/image"

	; The color of the highest waterline, default is 0, 255, 255.
	; Not used by the XFRenderer
	;BeachColorRed = 0
	;BeachColorGreen = 255
	;BeachColorBlue = 255


[TileZooming]
	; Maximum zoom level that will be generated, with the first being the region tiles.  Default is 8 levels.
	;HighestZoomLevel = 8


[DefaultTiles]
	; Defines how a region that was safely shut down should be displayed.  Default is "ignore", other options are "image" and "color".
	;OfflineRegion = "ignore"

	; The image to use for a region that was safely shut down if OfflineRegion is set to "image".  Default is "./images/offline.jpg".
	;OfflineRegionImage = "./images/offline.jpg"

	; The color to use for a region that was safely shut down if OfflineRegion is set to "color".  Default is 0, 0, 0.
	;OfflineRegionRed = 0
	;OfflineRegionGreen = 0
	;OfflineRegionBlue = 0

	; Defines how a region that is listed as online but is not responsive should be handled.  Default is "ignore", other options are "image" and "color".
	;CrashedRegion = "ignore"

	; The image to use for a region that is listed as online but is not responsive if CrashedRegion is set to "image".  Default is "./images/crashed.jpg".
	;CrashedRegionImage = "./images/crashed.jpg"

	; The color to use for a region that was safely shut down if CrashedRegion is set to "color".  Default is 0, 0, 0.
	;CrashedRegionRed = 0
	;CrashedRegionGreen = 0
	;CrashedRegionBlue = 0


[AssetsRead]
	; Path to the pre-existing folder where the asset cache database will be placed.  If the folder does not exist an error will be thrown.
	;DatabaseFolderPath = ""

	; Comma-delimited set of asset server config section names to be queried in series, e.g.: "WHIPExample, AssetWHIP2, LunacyExample"
	;  Series means that the next server entry will be queried for an asset only if the previous failed to return the asset.
	; Ampersand-delimited sets of asset server config section names can be used to indicate servers that should be queried in parallel, e.g.: "WHIPExample & AssetWHIP2 & LunacyExample"
	;  Parallel means that all server entries in the set will be queried for an asset and the only the first to return the asset will be used.
	; Both can be combined as in "WHIPExample, AssetWHIP2 & LunacyExample" resulting in "WHIPExample" being queried first and if it fails to provide an asset then both "AssetWHIP2" and "LunacyExample" will be queried for the asset at the same time.
	; The section names have to be specified here or they will not be read, no matter what you define elsewhere.
	;Servers = ""


[WHIPExample]
	; Example config section for a WHIP-based asset server.  These section names can be anything you want, as long as they don't collide with known sections.
	; Please remember that this is only an example and that unless you reference this section in [AssetsRead]:Servers it will never be looked at.

	; Specify the type of asset server this section references.  Each type requires its own subsequent options.
	; Valid values are: "WHIP", "CF"
	Type = "WHIP"

	; WHIP-only: the host name or IP address of the WHIP instance.
	;Host = ""

	; WHIP-only: the port of the WHIP instance.
	;Port = 32700

	; WHIP-only: the password for the WHIP instance.
	;Password = "changeme"


[LunacyExample]
	; Example config section for a CF-based asset server.  These section names can be anything you want, as long as they don't collide with known sections.
	; Please remember that this is only an example and that unless you reference this section in [AssetsRead]:Servers it will never be looked at.

	; Specify the type of asset server this section references.  Each type requires its own subsequent options.
	; Valid values are: "WHIP", "CF"
	Type = "CF"

	; CF-only: the username used to access the Cloud Files server.
	;Username = ""

	; CF-only: the API key used to access the Cloud Files server.
	;APIKey = ""

	; CF-only: whether or not to connect to Cloud Files using the internal URL or to use the external.  Defaults to true.
	;UseInternalURL = true

	; CF-only: the geographic region to use for retrieving the assets.
	;DefaultRegion = ""

	; CF-only: the prefix to apply to the container name when looking for assets.
	;ContainerPrefix = ""
